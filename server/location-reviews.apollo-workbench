{"graphName":"location-reviews","operations":{"getAllLocations":{"operation":"query getAllLocations {\n\tlocations {\n    id\n    name\n    photo\n    description\n    overallRating\n  }\n}"},"getLocationDetails":{"operation":"query getLocationDetails {\n\tlocation(id: \"location-1\") {\n    id\n    name\n    description\n    photo\n    overallRating\n    reviews {\n      comment      \n      rating\n    }\n  }\n}"},"submitReview":{"operation":"mutation submitReview {\n  submitReview(review: { comment: \"asdada\", rating: 5, locationId: \"1\" }) {\n    code\n    success\n    message\n    review {\n      id\n      comment\n      rating\n    }\n  }\n}\n"}},"queryPlans":{"getAllLocations":"Cannot query field \"overallRating\" on type \"Location\"","getLocationDetails":"QueryPlan {\n  Sequence {\n    Fetch(service: \"locations\") {\n      {\n        location(id: \"location-1\") {\n          id\n          name\n          description\n          photo\n          __typename\n        }\n      }\n    },\n    Flatten(path: \"location\") {\n      Fetch(service: \"reviews\") {\n        {\n          ... on Location {\n            __typename\n            id\n          }\n        } =>\n        {\n          ... on Location {\n            overallRating\n            reviews {\n              comment\n              rating\n            }\n          }\n        }\n      },\n    },\n  },\n}","submitReview":"QueryPlan {\n  Fetch(service: \"reviews\") {\n    {\n      submitReview(review: {comment: \"asdada\", rating: 5, locationId: \"1\"}) {\n        code\n        success\n        message\n        review {\n          id\n          comment\n          rating\n        }\n      }\n    }\n  },\n}"},"schemas":{"locations":{"shouldMock":true,"sdl":"type Query {\n  \"The full list of locations presented by the Interplanetary Space Tourism department\"\n  locations: [Location]!\n  \"The details of a specific location\"\n  location(id: ID!): Location\n}\n\ntype Location @key(fields: \"id\"){\n  id: ID!\n  \"The name of the location\"\n  name: String!\n  \"A short description about the location\"\n  description: String!\n  \"The location's main photo as a URL\"\n  photo: String!\n}","autoUpdateSchemaFromUrl":false},"reviews":{"shouldMock":true,"sdl":"type Mutation {\n  submitReview(review: ReviewInput): SubmitReviewResponse\n}\n\nextend type Location @key(fields: \"id\") {\n  id: ID! @external\n  \"The calculated overall rating based on all reviews\"\n  overallRating: Float\n  \"All submitted reviews about this location\"\n  reviews: [Review]!\n}\n\ntype Review {\n  id: ID!\n  \"Written text\"\n  comment: String\n  \"A number from 1 - 5 with 1 being lowest and 5 being highest\"\n  rating: Int\n}\n\ninput ReviewInput {\n  \"Written text\"\n  comment: String!\n  \"A number from 1 - 5 with 1 being lowest and 5 being highest\"\n  rating: Int!\n  \"Location Id\"\n  locationId: String!\n}\n\ninterface MutationResponse {\n  \"Similar to HTTP status code, represents the status of the mutation\"\n  code: Int!\n  \"Indicates whether the mutation was successful\"\n  success: Boolean!\n  \"Human-readable message for the UI\"\n  message: String!\n}\n\ntype SubmitReviewResponse implements MutationResponse {\n  \"Similar to HTTP status code, represents the status of the mutation\"\n  code: Int!\n  \"Indicates whether the mutation was successful\"\n  success: Boolean!\n  \"Human-readable message for the UI\"\n  message: String!\n  \"Newly created review\"\n  review: Review\n}\n","autoUpdateSchemaFromUrl":false}},"supergraphSdl":"schema\n  @core(feature: \"https://specs.apollo.dev/core/v0.2\"),\n  @core(feature: \"https://specs.apollo.dev/join/v0.1\", for: EXECUTION)\n{\n  query: Query\n  mutation: Mutation\n}\n\ndirective @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA\n\ndirective @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__owner(graph: join__Graph!) on INTERFACE | OBJECT\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT\n\ntype Location\n  @join__owner(graph: LOCATIONS)\n  @join__type(graph: LOCATIONS, key: \"id\")\n  @join__type(graph: REVIEWS, key: \"id\")\n{\n  \"\"\"A short description about the location\"\"\"\n  description: String! @join__field(graph: LOCATIONS)\n  id: ID! @join__field(graph: LOCATIONS)\n\n  \"\"\"The name of the location\"\"\"\n  name: String! @join__field(graph: LOCATIONS)\n\n  \"\"\"The calculated overall rating based on all reviews\"\"\"\n  overallRating: Float @join__field(graph: REVIEWS)\n\n  \"\"\"The location's main photo as a URL\"\"\"\n  photo: String! @join__field(graph: LOCATIONS)\n\n  \"\"\"All submitted reviews about this location\"\"\"\n  reviews: [Review]! @join__field(graph: REVIEWS)\n}\n\ntype Mutation {\n  submitReview(review: ReviewInput): SubmitReviewResponse @join__field(graph: REVIEWS)\n}\n\ninterface MutationResponse {\n  \"\"\"Similar to HTTP status code, represents the status of the mutation\"\"\"\n  code: Int!\n\n  \"\"\"Human-readable message for the UI\"\"\"\n  message: String!\n\n  \"\"\"Indicates whether the mutation was successful\"\"\"\n  success: Boolean!\n}\n\ntype Query {\n  \"\"\"The details of a specific location\"\"\"\n  location(id: ID!): Location @join__field(graph: LOCATIONS)\n\n  \"\"\"\n  The full list of locations presented by the Interplanetary Space Tourism department\n  \"\"\"\n  locations: [Location]! @join__field(graph: LOCATIONS)\n}\n\ntype Review {\n  \"\"\"Written text\"\"\"\n  comment: String\n  id: ID!\n\n  \"\"\"A number from 1 - 5 with 1 being lowest and 5 being highest\"\"\"\n  rating: Int\n}\n\ninput ReviewInput {\n  \"\"\"Written text\"\"\"\n  comment: String!\n\n  \"\"\"Location Id\"\"\"\n  locationId: String!\n\n  \"\"\"A number from 1 - 5 with 1 being lowest and 5 being highest\"\"\"\n  rating: Int!\n}\n\ntype SubmitReviewResponse implements MutationResponse {\n  \"\"\"Similar to HTTP status code, represents the status of the mutation\"\"\"\n  code: Int!\n\n  \"\"\"Human-readable message for the UI\"\"\"\n  message: String!\n\n  \"\"\"Newly created review\"\"\"\n  review: Review\n\n  \"\"\"Indicates whether the mutation was successful\"\"\"\n  success: Boolean!\n}\n\nenum core__Purpose {\n  \"\"\"\n  `EXECUTION` features provide metadata necessary to for operation execution.\n  \"\"\"\n  EXECUTION\n\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n}\n\nscalar join__FieldSet\n\nenum join__Graph {\n  LOCATIONS @join__graph(name: \"locations\" url: \"\")\n  REVIEWS @join__graph(name: \"reviews\" url: \"\")\n}\n"}